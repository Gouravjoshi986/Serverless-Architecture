# Servers are used to host a web app. 
you write backends in express and deploy it somewhere on the internet 
the most used servers today are AWS GCP Azure etc. 
in these type of servers you rent out a VM and auto scale your code on it. 

But it comes with a fixed cost even if no one visits your website. 
Auto scaling is problematic.
third problem is Monitoring various servers to make sure no server is down .

# Serverless Backe
it means that the developer doesnt have to worry about the server. 
The cloud operater will dynamically allocates and manages servers.

On writing the code(routes) automatically deploys scales and charge you on per request basis 
# Problem = Very expensive to scale ( high charge on per request at bigger scale)
            Cold start problem --> the first request after no activity faces high latency 


# There are many famous backend serverless providers - 
AWS Lambda
https://aws.amazon.com/pm/lambda/?trk=5cc83e4b-8a6e-4976-92ff-7a6198f2fe76&sc_channel=ps&ef_id=CjwKCAiAt5euBhB9EiwAdkXWO-i-th4J3onX9ji-tPt_JmsBAQJLWYN4hzTF0Zxb084EkUBxSCK5vhoC-1wQAvD_BwE:G:s&s_kwcid=AL!4422!3!651612776783!e!!g!!aws lambda!19828229697!143940519541

Google Cloud Functions
https://firebase.google.com/docs/functions

Cloudflare Workers
https://workers.cloudflare.com/ 

We are using cloudflare initially. 

# when to use serverless backend
When you have to get off the ground fast and don’t want to worry about deployments.
When you can’t anticipate the traffic and don’t want to worry about autoscaling.
If you have very low traffic and want to optimise for costs.

Just go to workers and pages section and create a worker to deploy a demo code on internet

Blog for how cloudflare work https://developers.cloudflare.com/workers/reference/how-workers-works/#:~:text=Though%20Cloudflare%20Workers%20behave%20similarly,used%20by%20Chromium%20and%20Node

# To initialize a worker 
npm create cloudflare -- my-app  * Dont deploy the application initially 
* Dependency = "wrangler": "^3.0.0"
* npm run dev to start worker locally 

* Cloudflare just expects you to write the logic of program. making of server is handled by them. 

* The user method id params etc info is given to us in the request prop 

* You can login with your cloudflare account on terminal using npx wrangler login 
and after your code is completed it can be deployed using 
# npm run deploy    - > with this you can upload your backend to internet for free
with this you will get a link of your backend 
Due to the await calls in the function we are returning promise of the function output as return type. 
